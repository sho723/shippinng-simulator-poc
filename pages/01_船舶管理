import streamlit as st
import pandas as pd
from datetime import datetime
from src.berth_simulator import Ship

st.set_page_config(page_title="船舶管理", page_icon="🚢")

st.title("🚢 船舶管理")

# 新規船舶登録フォーム
with st.expander("➕ 新規船舶登録", expanded=False):
    with st.form("ship_form"):
        col1, col2 = st.columns(2)
        
        with col1:
            ship_id = st.text_input("船舶ID")
            ship_name = st.text_input("船名")
            length = st.number_input("船長(m)", min_value=0.0, value=200.0)
            width = st.number_input("船幅(m)", min_value=0.0, value=30.0)
        
        with col2:
            draft = st.number_input("喫水(m)", min_value=0.0, value=10.0)
            cargo_type = st.selectbox("貨物種別", ["container", "bulk", "general", "tanker"])
            priority = st.slider("優先度", 1, 5, 3)
            eta = st.datetime_input("到着予定時刻", datetime.now())
        
        lat = st.number_input("現在位置(緯度)", value=35.0)
        lon = st.number_input("現在位置(経度)", value=140.0)
        
        if st.form_submit_button("船舶登録"):
            if ship_id and ship_name:
                new_ship = Ship(
                    ship_id, ship_name, length, width, draft, cargo_type,
                    (lat, lon), eta, priority
                )
                
                if 'ships' not in st.session_state:
                    st.session_state.ships = []
                
                st.session_state.ships.append(new_ship)
                st.success(f"船舶 {ship_name} を登録しました!")
            else:
                st.error("船舶IDと船名は必須です。")

# 登録済み船舶一覧
if 'ships' in st.session_state and st.session_state.ships:
    st.subheader("登録済み船舶")
    for i, ship in enumerate(st.session_state.ships):
        with st.expander(f"{ship.name} ({ship.id})"):
            col1, col2, col3 = st.columns(3)
            
            with col1:
                st.write(f"**船長:** {ship.length}m")
                st.write(f"**船幅:** {ship.width}m")
                st.write(f"**喫水:** {ship.draft}m")
            
            with col2:
                st.write(f"**貨物種別:** {ship.cargo_type}")
                st.write(f"**優先度:** {ship.priority}")
                st.write(f"**ETA:** {ship.eta}")
            
            with col3:
                st.write(f"**現在位置:** {ship.current_position}")
                
                if st.button(f"削除", key=f"delete_{i}"):
                    st.session_state.ships.pop(i)
                    st.rerun()
